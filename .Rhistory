install.packages(c("caret", "corrplot", "data.table", "xgboost"))
y
install.packages(c("caret", "corrplot", "data.table", "xgboost"))
train <- as.tibble(fread("/Users/anastazijaverovic/Desktop/NYC_TAXI_TRIP_DURATION_PREDICTION/train.csv"))
library('data.table')
train <- as.tibble(fread("/Users/anastazijaverovic/Desktop/NYC_TAXI_TRIP_DURATION_PREDICTION/train.csv"))
library('data.table')
install.packages("data.table")
install.packages("data.table")
library('data.table')
train <- as.tibble(fread("/Users/anastazijaverovic/Desktop/NYC_TAXI_TRIP_DURATION_PREDICTION/train.csv"))
train <- fread("/Users/anastazijaverovic/Desktop/NYC_TAXI_TRIP_DURATION_PREDICTION/train.csv")
train
train <- as_tibble(train)
train <- as.tibble(train)
library('tibble')
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
library('tibble')
train <- as.tibble(train)
train <- as_tibble(train)
train
test <- as_tibble(fread("/Users/anastazijaverovic/Desktop/NYC_TAXI_TRIP_DURATION_PREDICTION/test.csv"))
test <- as_tibble(fread("/Users/anastazijaverovic/Desktop/NYC_TAXI_TRIP_DURATION_PREDICTION/test.csv"))
library('data.table')
test <- as_tibble(fread("/Users/anastazijaverovic/Desktop/NYC_TAXI_TRIP_DURATION_PREDICTION/test.csv"))
test
sample_submit <- as_tibble(fread("/Users/anastazijaverovic/Desktop/NYC_TAXI_TRIP_DURATION_PREDICTION/sample_submission.csv"))
sample_submit
summary(train)
glimpse(train)
summary(test)
glimpse(test)
summary(sample_submit)
glimpse(sample_submit)
sum(is.na(train))
sum(is.na(test))
combine <- bind_rows(train %>% mutate(dset = "train"),
test %>% mutate(dset = "test",
dropoff_datetime = NA,
trip_duration = NA))
library('dplyr')
combine <- bind_rows(train %>% mutate(dset = "train"),
test %>% mutate(dset = "test",
dropoff_datetime = NA,
trip_duration = NA))
combine <- combine %>% mutate(dset = factor(dset))
combine
train <- train %>%
mutate(pickup_datetime = ymd_hms(pickup_datetime),
dropoff_datetime = ymd_hms(dropoff_datetime),
vendor_id = factor(vendor_id),
passenger_count = factor(passenger_count))
library('lubridate')
train <- train %>%
mutate(pickup_datetime = ymd_hms(pickup_datetime),
dropoff_datetime = ymd_hms(dropoff_datetime),
vendor_id = factor(vendor_id),
passenger_count = factor(passenger_count))
train
train %>%
mutate(check = abs(int_length(interval(dropoff_datetime,pickup_datetime))
+ trip_duration) > 0) %>%
select(check, pickup_datetime, dropoff_datetime, trip_duration) %>%
group_by(check) %>%
count()
train
train
#datasets overview, first train then test
summary(train)
combine
combine.dset
dset
View(combine)
View(train)
train %>%
mutate(check = abs(int_length(interval(dropoff_datetime,pickup_datetime))
+ trip_duration) > 0) %>%
select(check, pickup_datetime, dropoff_datetime, trip_duration) %>%
group_by(check) %>%
count()
View(train)
train %>%
mutate(check = abs(int_length(interval(dropoff_datetime,pickup_datetime))
+ trip_duration) > 0) %>%
select(check, pickup_datetime, dropoff_datetime, trip_duration) %>%
group_by(check) %>%
count()
view(train)
View(train)
View(train)
+ trip_duration) > 0) %>%
select(check, pickup_datetime, dropoff_datetime, trip_duration) %>%
group_by(check) %>%
count()
train %>%
mutate(check = abs(int_length(interval(dropoff_datetime,pickup_datetime))
+ trip_duration) > 0) %>%
select(check, pickup_datetime, dropoff_datetime, trip_duration) %>%
group_by(check) %>%
count()
count()
set.seed(1234)    #seed of random number generator
foo <- sample_n(train, 8e3)   #get random numbers
leaflet(data = foo) %>% addProviderTiles("Esri.NatGeoWorldMap") %>%
addCircleMarkers(~ pickup_longitude, ~pickup_latitude, radius = 1,
color = "blue", fillOpacity = 0.3)
library('leaflet')
set.seed(1234)    #seed of random number generator
foo <- sample_n(train, 8e3)   #get random numbers
leaflet(data = foo) %>% addProviderTiles("Esri.NatGeoWorldMap") %>%
addCircleMarkers(~ pickup_longitude, ~pickup_latitude, radius = 1,
color = "blue", fillOpacity = 0.3)
set.seed(1234)    #seed of random number generator
foo <- sample_n(train, 8e3)   #get random numbers
leaflet(data = foo) %>% addProviderTiles("Esri.NatGeoWorldMap") %>%
addCircleMarkers(~ pickup_longitude, ~pickup_latitude, radius = 1,
color = "blue", fillOpacity = 0.3)
set.seed(1234)    #seed of random number generator
foo <- sample_n(train, 8e3)   #get random numbers
leaflet(data = foo) %>% addProviderTiles("Esri.NatGeoWorldMap") %>%
addCircleMarkers(~ pickup_longitude, ~pickup_latitude, radius = 1,
color = "yellow", fillOpacity = 0.3)
set.seed(1234)    #seed of random number generator
foo <- sample_n(train, 8e3)   #get random numbers
leaflet(data = foo) %>% addProviderTiles("Esri.NatGeoWorldMap") %>%
addCircleMarkers(~ pickup_longitude, ~pickup_latitude, radius = 1,
color = "yellow", fillOpacity = 0.5)
set.seed(1234)    #seed of random number generator
foo <- sample_n(train, 8e3)   #get random numbers
leaflet(data = foo) %>% addProviderTiles("Esri.NatGeoWorldMap") %>%
addCircleMarkers(~ pickup_longitude, ~pickup_latitude, radius = 1,
color = "yellow", fillOpacity = 1)
